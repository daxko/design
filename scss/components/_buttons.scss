$btn-mini-padding: 4px 8px !default;
$btn-border-radius: 4px !default;
$btn-focus-color: $focus-color !default;

$btn-primary-colors: (
  "": (
    background: $white,
    border: 1px solid $secondary-300,
    text: $text-dark,
    hover: $secondary-100,
    active: $secondary-200,
    focus: $white,
    disabled: $white,
    disabledText: $secondary-300,
    padding: 8px 12px,
    groupBorder: 1px solid $secondary-300
  ),
  "-primary": (
    background: $primary,
    border: 1px solid transparent,
    text: $text-light,
    hover: $primary-variant,
    active: $primary-default-700,
    focus: $primary,
    disabled: $primary-default-200,
    disabledText: $text-light,
    padding: 8px 12px,
    groupBorder: 1px solid $primary-default-700
  ),
  "-success": (
    background: $success,
    border: 1px solid transparent,
    text: $text-light,
    hover: $success-variant,
    active: $primary-success-700,
    focus: $success,
    disabled: $primary-success-200,
    disabledText: $text-light,
    padding: 8px 12px,
    groupBorder: 1px solid $primary-success-700
  ),
  "-danger": (
    background: $danger,
    border: 1px solid transparent,
    text: $text-light,
    hover: $danger-variant,
    active: $primary-danger-700,
    focus: $danger,
    disabled: $primary-danger-200,
    disabledText: $text-light,
    padding: 8px 12px,
    groupBorder: 1px solid $primary-danger-700
  ),
  "-secondary": (
    background: $secondary-100,
    border: 1px solid transparent,
    text: $text-dark,
    hover: $secondary-200,
    active: $secondary-300,
    focus: $secondary-100,
    disabled: $secondary-100,
    disabledText: $secondary-300,
    padding: 8px 12px,
    groupBorder: 1px solid $secondary-300
  ),
  "-link": (
    background: transparent,
    border: 1px solid transparent,
    text: $primary-default-700,
    hover: $secondary-000,
    active: $secondary-100,
    focus: transparent,
    disabled: transparent,
    disabledText: $secondary-300,
    padding: 8px,
    groupBorder: 1px solid transparent
  )
);

// Buttons
// ----------------------------------------------

// Btn default
.btn {
  @extend %btn;
  
  position: relative;
  overflow: visible;
  display: inline-block;
  cursor: pointer;
  border-radius: $btn-border-radius;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
  outline: none;
  background-image: none;
  text-shadow: none;
  background-repeat: no-repeat;
  box-shadow: none;
  
  &:focus,
  &.focus {
    box-shadow: 0 0 0 2px $btn-focus-color;
    z-index: z-index('btn-focus');
  }

  &:hover {
    text-decoration: none;
  }

  &.active,
  &:active,
  &.active:focus,
  &:active:focus {
    box-shadow: none;
    background-image: none;
  }

  &:disabled,
  &.disabled,
  &:disabled:hover,
  &.disabled:hover {
    cursor: not-allowed;
    box-shadow: none !important;
    background-image: none;
    text-shadow: none;
  }
}

// overrides extra padding on button elements in Firefox
.btn::-moz-focus-inner {
  padding: 0;
  border: 0;
}

@each $color, $value in $btn-primary-colors{
  .btn#{$color} {
    color: map-get($value, 'text');
    background-color: map-get($value, 'background');
    border: map-get($value, 'border');
    padding: map-get($value, 'padding');
  
    &:hover {
      background-color: map-get($value, 'hover');
    }
  
    &:active,
    &.active,
    &:active:focus,
    &.active:focus {
      background-color: map-get($value, 'active');
      box-shadow: none;
    }
  
    &:focus {
      background-color: map-get($value, 'focus');
    }
  
    &:disabled,
    &.disabled,
    &:disabled:hover,
    &.disabled:hover {
      color: map-get($value, 'disabledText');
      background-color: map-get($value, 'disabled');
    }
  }
}

// Btn groups
.btn-group {
  display: inline-block;
  padding: 0;
  margin: 0;
  font-size: 0;
  vertical-align: middle;

  .btn {
    @extend %btn;
    display: inline-block;
  }

  @each $color, $value in $btn-primary-colors {
    .btn#{$color} {
      color: map-get($value, 'text');

      &:not(:first-child){
        border-left: map-get($value, 'groupBorder');
      }
    }
  }

  .btn-mini,
  .btn-mini:focus {
    padding: $btn-mini-padding;
  }

  .btn ~ .btn,
  .btn-group ~ .btn-group,
  .btn ~ .btn-group,
  .btn-group ~ .btn {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    margin-left: -1px;
  }

  > .btn:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .btn-group:not(:first-child):not(:last-child) > .btn {
    border-radius: 0;
  }

  + .btn-group {
    margin-left: 5px;
  }

  > .btn:hover,
  > .btn:active,
  > .btn:focus {
    z-index: 2;
  }

  // Button groups with input checkboxes and radio buttons
  > input[type=checkbox],
  > input[type=radio] {
    opacity: 0;
    margin: 0;
    padding: 0;
    overflow: hidden;
    width: 0;
    height: 0;
    position: absolute;

    &:focus + label {
      @extend .btn:focus;
    }

    &:checked + label {
      @extend .btn.active;
    }
    &:checked:focus + label {
      @extend .btn.active;
      box-shadow: 0 0 0 2px $btn-focus-color;
    }
  }
}

// Btn mini
.btn-mini {
  padding: $btn-mini-padding;

  &:hover,
  &.active,
  &:active,
  &:focus,
  &.disabled,
  &:disabled,
  &.disabled:hover,
  &:disabled:hover {
    padding: $btn-mini-padding !important;
  }
}

// Btn block
.btn-block {
  display: block;
  width: 100%;

  + .btn-block {
    margin-top: 14px;
  
    &.btn-mini {
      padding: $btn-mini-padding;
    }
  }
}