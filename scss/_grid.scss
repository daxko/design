$grid-gutter: 10px !default;
$grid-columns: 12 !default;
$grid-sm-width: 800px !default;
$grid-md-width: 1000px !default;
$grid-lg-width: 1200px !default;

// Grids
// ----------------------------------------------

@mixin grid() {
  display: block;
  padding: 0;
  margin: 0 (-.5 * $grid-gutter);
  font-size: 0; // remove whitespace between elements
  vertical-align: top;
}

@mixin col($width: 1) {
  font-size: 1rem; // restore the base font-size to the column
  display: inline-block;
  width: percentage($width);
  padding: 0 (.5 * $grid-gutter);
  vertical-align: inherit;
  text-align: left;
}

.grid {
  @include grid();

  [class*=col-] {
    @include col();
  }

  @for $i from 1 through $grid-columns {
    .col-#{$i} {
      width: percentage($i/$grid-columns);
    }
  }

  &.left {
    text-align: left;
  }

  &.center {
    text-align: center;
  }

  &.right {
    text-align: right;
  }

  &.top {
    vertical-align: top;
  }

  &.middle {
    vertical-align: middle;
  }

  &.bottom {
    vertical-align: bottom;
  }

}

// Grid layouts for small devices (800px and up)
@media (min-width: $grid-sm-width) {
  @for $i from 1 through $grid-columns {
    .grid .col-sm-#{$i} {
      width: percentage($i/$grid-columns);
    }
  }
}

// Grid layouts for medium devices (1000px and up)
@media (min-width: $grid-sm-width) {
  @for $i from 1 through $grid-columns {
    .grid .col-md-#{$i} {
      width: percentage($i/$grid-columns);
    }
  }
}

// Grid layouts for large devices (1200px and up)
@media (min-width: $grid-lg-width) {
  @for $i from 1 through $grid-columns {
    .grid .col-lg-#{$i} {
      width: percentage($i/$grid-columns);
    }
  }
}